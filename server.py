import logging

from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = 'token'

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥
    """
    await message.reply("–ü—Ä–∏–≤—ñ—Ç!\n–û–±–µ—Ä–∏ –∫—ñ–º–Ω–∞—Ç—É\n/room1\n/room2\n/room3\n–∞ –ø–æ–∫–∏ —Ü—è —Ñ—ñ—à–∫–∞ –Ω–µ –ø—Ä–∞—Ü—é—î –≤–≤–µ–¥—ñ—Ç—å —Å–ª–æ–≤–æ –∫—ñ—Ç –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –≤ —Ä—ñ–∑–Ω–∏—Ö –≤–∞—Ä—ñ–∞—Ü—ñ—è—Ö")

@dp.message_handler(regexp='(^cat[s]?$|puss)')
async def cats(message: types.Message):
    with open('data/kit.jpg', 'rb') as photo:
        '''
        –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —Ñ–æ—Ç–æ –∑ –ø–∞–ø–∫–∏ data 
        —è–∫—â–æ –æ—Ç—Ä–∏–º—É—î —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
        –∑—ñ —Å–ª–æ–≤–æ–º cat
        '''

        await message.reply_photo(photo, caption='Cats are here üò∫')

@dp.message_handler(regexp='(^Diana?$|puss)')
async def pdf_message(message: types.Message):
    with open('data/diana.jpeg', 'rb') as data:
        '''
        –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —Ñ–∞–π–ª –ø—Ä–µ–∑–∏–Ω—Ç–∞—ñ—ó –∑ –ø–∞–ø–∫–∏ data 
        —è–∫—â–æ –æ—Ç—Ä–∏–º—É—î —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
        –∑—ñ —Å–ª–æ–≤–æ–º 
        '''

        await message.reply_photo(data, caption='Presentation especially for you ')



@dp.message_handler()
async def echo(message: types.Message): #–µ—Ö–æ —Ñ—É–Ω–∫—Ü—ñ—è
    await message.answer(message.text)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
